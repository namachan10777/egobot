% -*- coding: utf-8 -*-
@require: steamer
@require: gr
@require: itemize
@require: vdecoset


Steamer.document(|
  title = {形態素解析器をフルスクラッチで作る話};
  author = {Nakano Masaki};
  institute = {香川高専 電気情報工学科5年};
  date = {Wed 1\textsuperscript{th} May, 2019};
  show-title = false;
  show-toc = false;
|) '<
  +section {タイトル} <
    +make-title{Twitter Botをフルスクラッチで作る話}{Nakano Masaki}{香川高専 電気情報工学科5年}{Wed 1\textsuperscript{th} May, 2019}
    +make-title{\sout{Twitter Botをフルスクラッチで作る話}}{Nakano Masaki}{香川高専 電気情報工学科5年}{Wed 1\textsuperscript{th} May, 2019}
    +make-title{形態素解析器をフルスクラッチで作る話}{Nakano Masaki}{香川高専 電気情報工学科5年}{Wed 1\textsuperscript{th} May, 2019}
    +frame ?:({自己紹介と今日の話題})<
      +listing {
        * 中野将生(なかの まさき)
        * 香川高専 電気情報工学科 4年
        * 本題
          ** Twitter Botの典型的な実装
          ** bi-gramマルコフモデルの形態素解析器のアルゴリズム
          ** 高速なTrie木とLatice解析の実装
      }
    >
    +frame-nc ?:({Twitter Bot})<
      +p-center{\insert-pdf(7cm)(`./fig/twitterbot.pdf`)(1);}
    >
    +frame-nc ?:({文章生成の詳細})<
      +listing {
        * 形態素n個で切り出す
      }
      +p-center{
        \insert-pdf(9cm)(`./fig/npair.pdf`)(1);
      }
    >
    +frame-nc ?:({文章生成の詳細})<
      +listing {
        * しりとりをする
      }
      +p-center{
        \insert-pdf(8cm)(`./fig/chain.pdf`)(1);
      }
    >
    +frame-nc ?:({マルコフ連鎖とは?})<
      +listing {
        * 過去と関係なく、現在の状態のみで未来への遷移が決まる
        * 離散的な状態を取る
      }
      +centered-pdf(6.5cm)(`./fig/markov.pdf`)(1);
    >
    +frame ?:({文章生成の詳細})<
      +listing {
        * 文脈を考慮しないしりとりなので、次のnつ組は現在のnつ組の最後の形態素で決まる(マルコフ性)
        * nつ組みの個数は自然数個であり、連続的な値を取らない(離散的)
      }
      +p {
       \emph{つまりマルコフ連鎖}
      }
    >
    +frame ?:({必要なもの})<
      +listing {
        * 学習元
        * Twitter APIとの通信
        * 3つ組みを格納するDB
        * 形態素解析器
      }
    >
    +frame ?:({必要なもの})<
      +listing {
        * 学習元(オタクなのでツイート数には困らない)
        * Twitter APIとの通信(書いている人は多い)
        * 3つ組みを格納するDB(要求が単純でデータも精々MB単位)
        * 形態素解析器(実は実装できる)
      }
      +p{
        ${\to}実装できるのでは?
      }
    >
    +frame ?:({形態素解析器の基本的なアルゴリズム})<
      +listing{
        * 辞書を引きながら候補(Latice)を列挙する
        * 生起コスト(単語の出現しやすさ)と連接コスト(単語の繋がりやすさ)を考慮して最短経路を求める
          ** 実際はLatice構築と探索は並行して行う
      }
    >
    +frame-nc ?:({形態素解析器の基本的なアルゴリズム})<
      +p-center {
        \insert-pdf(10cm)(`./fig/latice.pdf`)(1);
      }
    >
  >
>
